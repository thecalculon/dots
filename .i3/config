# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!
gaps inner 2 
gaps outer 4
smart_gaps on

for_window [class=".*"] border pixel 0

# Activate smart borders (always)
smart_borders on

# Activate smart borders (only when there are effectively no gaps)
smart_borders no_gaps

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec kitty

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec dmenu_run

# For use with xfce4 whisker popup menu in Mint XFCE:
# bindsym $mod+Shift+d exec dmenu_run


# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent
# new window would, it removes the title bar. At least on windows in split containers. It seems arent

# focus the child container
#bindsym $mod+d focus child

set $ws1 "1:  "
set $ws2 "2:  "
set $ws3 "3:  "
set $ws4 "4:  "
set $ws5 "5:  "
set $ws6 "6:   "
set $ws7 "7:  "
set $ws8 "8:  "
set $ws9 "9:  " 
set $ws10 "10: others"

# switch to workspace
bindsym $mod+1 workspace $ws1; 
bindsym $mod+2 workspace $ws2; 
bindsym $mod+3 workspace $ws3; 
bindsym $mod+4 workspace $ws4; 
bindsym $mod+5 workspace $ws5; 
bindsym $mod+6 workspace $ws6; 
bindsym $mod+7 workspace $ws7; 
bindsym $mod+8 workspace $ws8; 
bindsym $mod+9 workspace $ws9; 
bindsym $mod+0 workspace $ws10;

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

assign [class="kitty"]  $ws1
assign [class="chrome"] $ws2
assign [class="kitty"]  $ws3
assign [class="Thunar"] $ws4
assign [class="zotero"] $ws5
assign [class="evince"] $ws5
assign [class="chrome"] $ws6
assign [class="clementine"] $ws7
assign [class="totem"] $ws8
assign [class="skype"] $ws9

for_window [title="alsamixer"] floating enable border pixel 1
for_window [title="transmission-qt"] floating enable border pixel 1
for_window [class="clementine"] floating enable border pixel 1
for_window [class="Thunar"] floating enable
for_window [class="Skype"] floating enable border normal

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)


#-old-#bar {
#-old-#       status_command i3status
#-old-#}
# exec --no-startup-id polybar example
exec --no-startup-id nitrogen --restore
exec --no-startup-id synergy
exec --no-startup-id  nm-applet
exec --no-startup-id  lock
exec --no-startup-id  menutray -i
#exec_always --no-startup-id exec i3-workspace-names-daemon

bindsym XF86MonBrightnessUp exec ./brightness.sh +20
bindsym XF86MonBrightnessDown exec ./brightness.sh -20

bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +2%; exec pactl set-sink-mute @DEFAULT_SINK@ 0
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -2%; exec pactl set-sink-mute @DEFAULT_SINK@ 0
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle

#bindsym XF86AudioRaiseVolume exec ./volume.sh up
#bindsym XF86AudioLowerVolume exec ./volume.sh down
#bindsym XF86AudioMute exec ./volume.sh mute 
set $bg-color            #262d38
set $inactive-bg-color   #262d38
set $text-color          #f3f4f5
set $inactive-text-color #676E7D
set $urgent-bg-color     #E53935

bar {
    font pango:mono 10
        status_command i3blocks 
        position top
        mode dock
        modifier None
        workspace_buttons yes
#font pango:PragmataPro 12
        height 18
        colors {
                background #343d46
                statusline #fdf6e3
                separator #323232
 background $bg-colorx
                separator #757575
                #                  border             background         text
                focused_workspace  $bg-color          $bg-color          $text-color
                inactive_workspace $inactive-bg-color $inactive-bg-color $inactive-text-color
                urgent_workspace   $urgent-bg-color   $urgent-bg-color   $text-color
        }
}

bindsym $mod+b bar mode toggle

set $mode_power [l]ogoff | [s]hutdown
mode "$mode_power" {
        bindsym l exec i3-msg exit
        bindsym s exec systemctl poweroff
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
bindsym --release XF86PowerOff mode "$mode_power"

set $i3_resurrect i3-resurrect

# Save workspace mode.
mode "save" {
  bindsym 1 exec $i3_resurrect save -w $ws1
  bindsym 2 exec $i3_resurrect save -w $ws2
  bindsym 3 exec $i3_resurrect save -w $ws3
  bindsym 4 exec $i3_resurrect save -w $ws4
  bindsym 5 exec $i3_resurrect save -w $ws5
  bindsym 6 exec $i3_resurrect save -w $ws6
  bindsym 7 exec $i3_resurrect save -w $ws7
  bindsym 8 exec $i3_resurrect save -w $ws8
  bindsym 9 exec $i3_resurrect save -w $ws9
  bindsym 0 exec $i3_resurrect save -w $ws0

  # Back to normal: Enter, Escape, or s
  bindsym Return mode "default"
  bindsym Escape mode "default"
  bindsym s mode "default"
  bindsym $mod+m mode "default"
}

bindsym $mod+m mode "save"

# Restore workspace mode.
mode "restore" {
  bindsym 1 exec $i3_resurrect restore -w $ws1
  bindsym 2 exec $i3_resurrect restore -w $ws2
  bindsym 3 exec $i3_resurrect restore -w $ws3
  bindsym 4 exec $i3_resurrect restore -w $ws4
  bindsym 5 exec $i3_resurrect restore -w $ws5
  bindsym 6 exec $i3_resurrect restore -w $ws6
  bindsym 7 exec $i3_resurrect restore -w $ws7
  bindsym 8 exec $i3_resurrect restore -w $ws8
  bindsym 9 exec $i3_resurrect restore -w $ws9
  bindsym 0 exec $i3_resurrect restore -w $ws0

  # Back to normal: Enter, Escape, or n
  bindsym Return mode "default"
  bindsym Escape mode "default"
  bindsym n mode "default"
  bindsym $mod+n mode "default"
}

bindsym $mod+n mode "restore"
