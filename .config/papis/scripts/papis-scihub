#! /usr/bin/env bash
# papis-short-help: Get pdf and bibtex from doi identificator
# Copyright 2017 Alejandro Gallo. GPLv3
# Last modified Die Feb  6 14:48:31 CET 2018

cat <<EOF
----------------------------------------------------------------------------

                             WARNING NOTICE:
papis-scihub v1.2.0
----------------------------------------------------------------------------

This script uses the platform SCI-HUB, which might be in conflict with local
laws in your country. Use it at your own risk.

If you just want to obtain information using the doi number, then
use the legally obtainable doi information included in papis

  papis add path/to/the/document --from-doi DOI_NUMBER

----------------------------------------------------------------------------

EOF

SCIHUB_POSSIBLE_DOMAIN_NAMES=(
sci-hub.st
sci-hub.ren
sci-hub.ac
sci-hub.biz
sci-hub.la
sci-hub.mn
sci-hub.name
sci-hub.tv
sci-hub.hk
sci-hub.is
sci-hub.ws
tree.sci-hub.la
80.82.77.84
80.82.77.83
)

SCIHUB_URL=""

sciget(){
  link=$1
  for domain in ${SCIHUB_POSSIBLE_DOMAIN_NAMES[@]} ; do
    # ping one packet with two seconds of timeout
    log "Trying ${domain}"
    if ping -q -W 1 -c 1 ${domain} 2>&1 2> /dev/null; then
      SCIHUB_URL="https://${domain}"
      break
    fi
  done
  domain=sci-hub.st
  SCIHUB_URL="https://${domain}"
  output_pdf=output.pdf

  if [[ -z ${SCIHUB_URL} ]]; then
    cat <<EOF

    !!ALL URLS FOR SCIHUB THAT WE KNOW OF APPEAR TO BE DOWN!!
    ${SCIHUB_POSSIBLE_DOMAIN_NAMES[@]}

    Please consider opening an issue in https://github.com/alejandrogallo/papis
    for this problem or editing in the script the SCIHUB_POSSIBLE_URLS
    list variable.
EOF
    exit 1
  else
    log "Using SCIHUB URL ${SCIHUB_URL}"
  fi

  link="${SCIHUB_URL}/$link"
  echo $link
  pdf_url="https:$(wget --no-check-certificate -q -O - ${link} | grep -Eom1 '//[^ ]+\.pdf')"

  echo
  log "link = ${link}"
  log "pdf_url = ${pdf_url}"
  echo

  if [[ -z ${pdf_url} ]]; then
    exit 1
  fi

  cat <<EOF

  ____   ____ ___      _   _ _   _ ____  
  / ___| / ___|_ _|    | | | | | | | __ ) 
  \___ \| |    | |_____| |_| | | | |  _ \ 
  ___) | |___ | |_____|  _  | |_| | |_) |
  |____/ \____|___|    |_| |_|\___/|____/ 


  Downloading...


EOF

wget -v --no-check-certificate -rHA '*.pdf' -e robots=off ${pdf_url} -O ${output_pdf}
browser=${BROWSER:-xdg-open}

if ! file ${output_pdf} | grep PDF ; then
  log "${output_pdf} is not a pdf, going to the website"
  log "Tell the website that you are human"
  ${browser} ${pdf_url}
  read -p "Robots ready? (y/N)" -n 1 -r
  echo
  if [[ $REPLY =~ ^[Yy]$ ]]; then
    log "Downloading again ..."
    wget -q --no-check-certificate ${pdf_url} -O ${output_pdf}
    if ! file ${output_pdf} | grep PDF ; then
      log "There was a problem downloading the file"
      rm ${output_pdf}
      exit 1
    fi
  else
    log "Taking you out of here..."
    rm ${output_pdf}
    exit 0
  fi
  REPLY= # unset REPLY after using it
fi
}

log() {
  echo "$(basename $0)> $@"
}

if [[ $1 = "-h" ]]; then
  echo "Get pdf and bibtex from doi identificator or url containing doi"
  cat <<EOF
Usage: papis scihub DOI <papis add flags>

Examples:
---------

  papis scihub 10.1002/andp.19053220607 -d einstein_papers --name photon_definition

  papis scihub http://physicstoday.scitation.org/doi/10.1063/1.881498 --name important_paper

  papis scihub https://doi.org/10.1016/j.physrep.2016.12.002
EOF
  exit 0
fi

sciget=sciget

pdf_output=output.pdf
doi="$1"
shift
log "Doi: ${doi}"
[[ -n $@ ]] && log "Other args: $@"

${sciget} ${doi}

if [[ ! $? = 0 ]]; then
  log "Something happened"
  exit 1
fi

set -x
papis ${PAPIS_VERBOSE} -l scihub \
  add ${pdf_output} \
  --from doi ${doi} $@
set +x
